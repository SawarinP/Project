/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ChessChaturanga.Visual;

import ChessChaturanga.Logica.Datos;
import ChessChaturanga.Logica.OptionGame;
import ChessChaturanga.Logica.Partida;
import ChessChaturanga.Logica.SaveWithFiles;
import ChessChaturanga.Logica.User;
import ChessChaturanga.Logica.saveWithArrayList;
import java.io.File;
import javax.swing.JOptionPane;

/**
 *
 * @author KenyStev
 */
public class OptionsWithMenu extends javax.swing.JInternalFrame {
    private OptionGame option;
    
    /**
     * Creates new form newGame
     */
    public OptionsWithMenu(OptionGame option) {
        initComponents();
        this.option=option;
        loadFrame();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        cmbOptions = new javax.swing.JComboBox();
        btnPlay = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cmbUsers = new javax.swing.JComboBox();

        setClosable(true);

        jLabel1.setText("Adversario:");

        btnPlay.setText("Jugar Chaturanga");
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        jLabel2.setText("Transferir a:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbOptions, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 160, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cmbUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnPlay)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
        try{
            System.out.println("Clickeado el Boton Opcion: "+option.name());
            boolean state=false;
            Partida p=null;
            switch(option){
                case NEWGAME: state = Datos.saver.crearPartida(Datos.logedin, getUser()); break;
                case LOADGAME: 
                    if(Datos.saver instanceof saveWithArrayList)
                        p = Datos.saver.cargarPartida(cmbOptions.getSelectedIndex());
                    else if(Datos.saver instanceof SaveWithFiles){
                        String[] index= cmbOptions.getSelectedItem().toString().split("_");
                        p = Datos.saver.cargarPartida(Integer.parseInt(index[0]));
                        System.out.println("Valor de p: "+p);
                    }
                if(p!=null){state=true; new BoardVisual(p).setVisible(state);
                    System.out.println("Estado: "+state);} break;
                case DELETEGAME: 
                    if(Datos.saver instanceof saveWithArrayList)
                        state = Datos.saver.eliminarPartida(cmbOptions.getSelectedIndex()+""); 
                    if(Datos.saver instanceof SaveWithFiles){
                        String[] index = cmbOptions.getSelectedItem().toString().split("_");
                        state = Datos.saver.eliminarPartida(index[0]);
                    }
                break;
                case TRASFERGAME:
                    User user2 = null;
                    if(Datos.saver instanceof saveWithArrayList){
                        user2 = ((saveWithArrayList)Datos.saver).users.get(Datos.saver.buscarUser(cmbUsers.getSelectedItem().toString()));
                        state = Datos.saver.transferirPartida(""+cmbOptions.getSelectedIndex(), Datos.logedin, user2);
                    }
                    if(Datos.saver instanceof SaveWithFiles){
                        user2 = ((SaveWithFiles)Datos.saver).users.get(Datos.saver.buscarUser(cmbUsers.getSelectedItem().toString()));
                        String[] index = cmbOptions.getSelectedItem().toString().split("_");
                        state = Datos.saver.transferirPartida(index[0], Datos.logedin, user2);
                    }
                    break;
            }
            if(state)dispose();
        }
        catch(NullPointerException e){
            JOptionPane.showMessageDialog(this, "Error: No hay ningun usuario creado!!!\nFavor cree almenos dos users para Jugar", "No Hay Users!", JOptionPane.ERROR_MESSAGE);
            dispose();
        }
//        finally{
//            dispose();
//        }
    }//GEN-LAST:event_btnPlayActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OptionsWithMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OptionsWithMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OptionsWithMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OptionsWithMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OptionsWithMenu(OptionGame.NEWGAME).setVisible(true);
            }
        });
    }

    public User getUser() {
        if (Datos.saver instanceof saveWithArrayList) {
            return ((saveWithArrayList) Datos.saver).users.get(Datos.saver.buscarUser(cmbOptions.getSelectedItem().toString()));
        }else if (Datos.saver instanceof SaveWithFiles) {
            return ((SaveWithFiles) Datos.saver).users.get(Datos.saver.buscarUser(cmbOptions.getSelectedItem().toString()));
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPlay;
    private javax.swing.JComboBox cmbOptions;
    private javax.swing.JComboBox cmbUsers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables

    private void loadFrame() {
        try{
            switch(option){
                case NEWGAME:
                    if (Datos.saver instanceof saveWithArrayList) {
                        for (User u : ((saveWithArrayList) Datos.saver).users) {
                            if(!u.equals(Datos.logedin))
                                cmbOptions.addItem(u.getName());
                        }
                    }else if (Datos.saver instanceof SaveWithFiles) {
                        for (User u : ((SaveWithFiles) Datos.saver).users) {
                            if(!u.equals(Datos.logedin))
                                cmbOptions.addItem(u.getName());
                        }
                    }
                    break;
                    //En las siguientes tres opciones se muestra solo las partidas del user logedin
                case LOADGAME:
                case DELETEGAME:
                case TRASFERGAME:
                    if (Datos.saver instanceof saveWithArrayList) {
                        for (Partida p : ((saveWithArrayList) Datos.saver).partidas) {
                            if(Datos.logedin.equals(p.getBoard().getPlayer1()) && !p.isTerminada())
                                cmbOptions.addItem(p);
                        }
                    }else if(Datos.saver instanceof SaveWithFiles){
                        SaveWithFiles saver = (SaveWithFiles)Datos.saver;
                        File userDir = new File(saver.userPath(Datos.logedin.getName()));
                        for (File p : userDir.listFiles()) {
                            if(!p.getName().equals("counter.cht")){
                                Partida par = (Partida)saver.deserializar(p.getPath());
                                if(!par.isTerminada())
                                    cmbOptions.addItem(par);
                                else
                                    p.delete();
                            }
                        }
                    }
                    jLabel1.setText("Partida:");
                    
                    break;
            }
            btnPlay.setText(option.name());
            if(option == OptionGame.TRASFERGAME){
                if (Datos.saver instanceof saveWithArrayList) {
                    for (User u : ((saveWithArrayList) Datos.saver).users) {
                        if(!u.equals(Datos.logedin))
                            cmbUsers.addItem(u.getName());
                    }
                }else if (Datos.saver instanceof SaveWithFiles) {
                    for (User u : ((SaveWithFiles) Datos.saver).users) {
                        if(!u.equals(Datos.logedin))
                            cmbUsers.addItem(u.getName());
                    }
                }
                jLabel2.setVisible(true);
                cmbUsers.setVisible(true);
            }else{
                jLabel2.setVisible(false);
                cmbUsers.setVisible(false);
            }
        }
        catch(Exception e){
            System.out.println("Error: "+e);
        }
    }
    
    public int getCount(){
        return cmbOptions.getItemCount();
    }
}
